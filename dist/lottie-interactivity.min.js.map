{"version":3,"file":"lottie-interactivity.min.js","sources":["../src/main.js"],"sourcesContent":["const DEFAULT_OPTIONS = {\n  player: 'lottie-player',\n};\nconst LOTTIE_PLAYER_NODE = 'LOTTIE-PLAYER';\nconst ERROR_PREFIX = '[lottieInteractivity]:';\n\n/**\n * LottieFiles interactivity for Lottie\n */\nexport class LottieInteractivity {\n  constructor({ actions, container, mode, player, playerInstance, ...options } = DEFAULT_OPTIONS) {\n    // Resolve lottie instance specified in player option\n    if (!(typeof player === 'object' && player.constructor.name === 'AnimationItem')) {\n      if (typeof player === 'string') {\n        const elem = document.querySelector(player);\n        this.playerInstance = elem;\n        if (elem && elem.nodeName === LOTTIE_PLAYER_NODE) {\n          player = elem.getLottie();\n        }\n      } else if (player instanceof HTMLElement && player.nodeName === LOTTIE_PLAYER_NODE) {\n        player = player.getLottie();\n      }\n\n      // Throw error no player instance has been successfully resolved\n      if (!player) {\n        throw new Error(`${ERROR_PREFIX} Specified player is invalid.`, player);\n      }\n    }\n\n    // Get the configured container element.\n    if (typeof container === 'string') {\n      container = document.querySelector(container);\n    }\n\n    // Use player wrapper as fallback if container couldn't be resolved.\n    if (!container) {\n      container = player.wrapper;\n    }\n\n    this.player = player;\n    this.container = container;\n    this.mode = mode;\n    this.actions = actions;\n    this.options = options;\n  }\n\n  boundingBoxUtils() {\n    // Get the bounding box for the lottie player or container\n    const { top, bottom, height } = this.container.getBoundingClientRect();\n\n    // Calculate current view percentage\n    const current = window.innerHeight - top;\n    const max = window.innerHeight + height;\n    const currentPercent = current / max;\n\n    // Skip if out of viewport\n    if (currentPercent < 0 || currentPercent > 1) {\n      return;\n    }\n    // Find the first action that satisfies the current position conditions\n    const action = this.actions.find(({ start, end }) => currentPercent >= start && currentPercent <= end);\n\n    // Skip if no matching action was found!\n    if (!action) {\n      return;\n    }\n\n    return { height, bottom, currentPercent, action };\n  }\n\n  start() {\n    if (this.mode === 'scroll') {\n      window.addEventListener('scroll', this.#scrollHandler);\n    }\n\n    if (this.mode === 'hover') {\n      this.container.addEventListener('mouseenter', this.#hoverStartHandler);\n      this.container.addEventListener('mouseleave', this.#hoverEndHandler);\n    }\n\n    if (this.mode === 'mouseposition') {\n      this.container.onmousemove = this.#mousePositionHandler;\n    }\n  }\n\n  stop() {\n    if (this.mode === 'scroll') {\n      window.removeEventListener('scroll', this.#scrollHandler);\n    }\n\n    if (this.mode === 'hover') {\n      this.container.removeEventListener('mouseenter', this.#hoverStartHandler);\n      this.container.removeEventListener('mouseleave', this.#hoverEndHandler);\n    }\n  }\n\n  #hoverStartHandler = () => {\n    try {\n      const { action } = this.boundingBoxUtils();\n\n      if (action.type === 'loop') {\n        if (this.player.isPaused === true) {\n          this.player.playSegments(action.frames, true);\n        }\n      } else if (action.type === 'play') {\n        // Play: Reset segments and continue playing full animation from current position\n        if (this.player.isPaused === true) {\n          this.player.resetSegments();\n        }\n        this.player.playSegments(action.frames);\n      } else if (action.type === 'stop') {\n        // Stop: Stop playback\n        this.player.goToAndStop(action.frames[0]);\n        this.player.stop();\n      }\n    } catch (e) {\n      // console.log('no action within this viewport');\n    }\n  };\n\n  #hoverEndHandler = () => {\n    // Skip if no matching action was found!\n    try {\n      const { action } = this.boundingBoxUtils();\n\n      if (action.type === 'loop') {\n        this.player.stop();\n      } else if (action.type === 'play') {\n        this.player.stop();\n      } else if (action.type === 'stop') {\n        this.player.playSegments(action.frames, true);\n      }\n    } catch (e) {\n      // no action within this viewport\n    }\n  };\n\n  #scrollHandler = () => {\n    try {\n      const { currentPercent, action } = this.boundingBoxUtils();\n\n      // Get lottie instance\n      this.player.loop = true;\n\n      // Process action types:\n      if (action.type === 'seek') {\n        // Seek: Go to a frame based on player scroll position action\n        this.player.playSegments(action.frames, true);\n        this.player.goToAndStop(\n          Math.ceil(((currentPercent - action.start) / (action.end - action.start)) * this.player.totalFrames),\n          true,\n        );\n      } else if (action.type === 'loop') {\n        // Loop: Loop a given frames\n        if (this.player.isPaused === true) {\n          this.player.playSegments(action.frames, true);\n        }\n      } else if (action.type === 'play') {\n        // Play: Reset segments and continue playing full animation from current position\n        if (this.player.isPaused === true) {\n          this.player.resetSegments();\n        }\n        this.player.play();\n      } else if (action.type === 'stop') {\n        // Stop: Stop playback\n        this.player.goToAndStop(action.frames[0]);\n        this.player.stop();\n        // TODO: This is not the way to implement this. Refactor needed!\n      }\n    } catch (e) {\n      // no action within this viewport\n    }\n  };\n  #mousePositionHandler = mouseEvent => {\n    try {\n      const { height, bottom, currentPercent, action } = this.boundingBoxUtils();\n      let obj = this.container;\n      let obj_left = 0;\n      let obj_top = 0;\n      let xpos;\n      let ypos;\n      // Get the moise position relative to container\n      while (obj.offsetParent) {\n        obj_left += obj.offsetLeft;\n        obj_top += obj.offsetTop;\n        obj = obj.offsetParent;\n      }\n      if (mouseEvent) {\n        //FireFox\n        xpos = mouseEvent.pageX;\n        ypos = mouseEvent.pageY;\n      } else {\n        //IE\n        xpos = window.event.x + document.body.scrollLeft - 2;\n        ypos = window.event.y + document.body.scrollTop - 2;\n      }\n      xpos -= obj_left;\n      ypos -= obj_top;\n\n      //console.log(\"x\" + xpos);\n      //console.log(\"y\" + ypos);\n      // cauclate percentage of y axis\n      if (action.type === 'seek-yaxis') {\n        const percentage = Math.ceil((ypos / height) * 100);\n        const percentageString = percentage.toString() + '%';\n        this.playerInstance.seek(percentageString);\n      } else if (action.type === 'seek-xaxis') {\n        const percentage = Math.ceil((xpos / bottom) * 100);\n        const percentageString = percentage.toString() + '%';\n        this.playerInstance.seek(percentageString);\n      }\n    } catch (e) {\n      // no action here }\n    }\n  };\n}\n\nexport const create = options => {\n  const instance = new LottieInteractivity(options);\n  instance.start();\n\n  return instance;\n};\n\nexport default create;\n"],"names":["DEFAULT_OPTIONS","player","LottieInteractivity","actions","container","mode","options","playerInstance","action","_this","boundingBoxUtils","type","isPaused","playSegments","frames","resetSegments","goToAndStop","stop","e","currentPercent","loop","Math","ceil","start","end","totalFrames","play","mouseEvent","xpos","ypos","height","bottom","obj","obj_left","obj_top","offsetParent","offsetLeft","offsetTop","pageX","pageY","window","event","x","document","body","scrollLeft","y","scrollTop","percentageString","toString","seek","_typeof","constructor","name","elem","querySelector","nodeName","getLottie","HTMLElement","Error","wrapper","this","getBoundingClientRect","top","innerHeight","find","addEventListener","onmousemove","removeEventListener","create","instance"],"mappings":"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"}